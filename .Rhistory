data_scenarios_lasso %>% as.matrix,
s = "lambda.1se"
)
data_scenarios = data_scenarios %>%
mutate (e.cum_hat_lasso = lasso_predictions_scenarios_vector, .before = time) %>%
mutate (efficacy_lasso = ((e.cum_hat_lasso / e.cum_hat_lasso[app.mthd == "bc" & incorp == "none"]) - 1) * 100,
.by = c (tan.app, app.rate, man.dm, man.ph, man.source, group_temp, group_wind, group_rain))
load (file = "scripts/processed_data/data_scenarios_alfam2.Rdata")
alfam2_predictions_scenarios_vector =  alfam2 (
pars = alfam2pars01,
dat = data_scenarios_alfam2,
app.name = "tan.app",
time.name = "time",
time.incorp = "t.incorp",
group = "pmid",
prep = TRUE,
warn = FALSE
)  %>%
filter (time == max (time), .by = pmid) %>%
select (pmid, e.cum_hat_alfam2 = e)
data_scenarios = data_scenarios %>%
left_join (alfam2_predictions_scenarios_vector, by = "pmid") %>%
mutate (efficacy_alfam2 = ((e.cum_hat_alfam2 / e.cum_hat_alfam2[app.mthd == "bc" & incorp == "none" & t.incorp == "-"]) - 1) * 100,
.by = c (tan.app, app.rate, man.dm, man.ph, man.source, group_temp, group_wind, group_rain))
Figure_6 = data_scenarios %>%
select (app.mthd, incorp, t.incorp, man.ph,
efficacy_random_forest, efficacy_xgboost, efficacy_lasso, efficacy_alfam2) %>%
rename (efficacy_rforest = efficacy_random_forest) %>%
pivot_longer (cols = c (5 : 8), names_to = c (".value", "method"), names_pattern = "(.+)_(.+)") %>%
mutate (method = recode (method, "rforest" = "random forest")) %>%
mutate (method = recode (method, "alfam2" = "ALFAM2", "lasso" = "Lasso", "random forest" = "Random forest", "xgboost" = "Gradient boosting")) %>%
mutate (method = factor (method, levels = c ("ALFAM2", "Lasso", "Random forest", "Gradient boosting"))) %>%
mutate (group = paste (app.mthd, incorp, t.incorp)) %>%
filter (! (app.mthd == "bc" & incorp == "none")) %>%
mutate (group = recode (group,
"bc shallow 0" = "incorporation",
"bsth none -" = "trailing hoses",
"os none -" = "open slot",
"ts none -" = "trailing shoes")) %>%
ggplot () +
geom_boxplot (aes (x = efficacy, y = group, fill = group)) +
scale_fill_manual (values = Dark2[c(2 : 5)]) +
scale_y_discrete (limits = c ("open slot", "trailing shoes", "trailing hoses", "incorporation")) +
ylab ("") + xlab ("Efficacy") +
theme (legend.position = "none",
axis.ticks.y = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
facet_wrap (~ method, ncol = 1)
Figure_6
tiff (file = "figures/Figure_6.tiff", width = 1000, height = 800)
Figure_6
dev.off()
png (file = "figures/Figure_6.png", width = 1000, height = 800)
Figure_6
dev.off()
data_scenarios %>%
filter (efficacy_xgboost > 0) %>%
select (efficacy_xgboost, tan.app, app.mthd, app.rate, man.source, incorp, group_temp, group_wind, group_rain) %>%
kable ()
data_scenarios %>%
filter (efficacy_xgboost > 0) %>%
select (tan.app, app.mthd, app.rate, man.source, incorp, group_temp, group_wind, group_rain) %>%
lapply (table)
data_tmp = data_scenarios %>%
filter (efficacy_xgboost > 0) %>%
select (efficacy_xgboost, tan.app, app.mthd, app.rate, man.source, incorp, group_temp, group_wind, group_rain) %>%
mutate (group_rain = ifelse (group_rain == "q1", "low", "high")) %>%
mutate (tan.app = paste ("TAN = ", round (tan.app, digits = 1), " kg/ha", sep = ""),
app.rate = paste ("Application rate = ", round (app.rate, digits = 1), " t/ha or m3/ha", sep = ""),
group_rain = paste ("Rain = ", group_rain))
Figure_8 = ggplot (data_tmp) +
geom_histogram (aes (efficacy_xgboost)) +
facet_wrap (~ tan.app + app.rate + group_rain) +
xlab ("Efficacy") +
ylab ("Number of predictions") +
theme (axis.title.y = element_text (margin = ggplot2::margin (r = 20), size = 18),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)),
strip.text = element_text (size = 18),
axis.text = element_text (size = 18),
axis.title.x = element_text (size = 18))
Figure_8
tiff (file = "figures/Figure_8.tiff", width = 1200, height = 800)
Figure_8
dev.off()
data_scenarios %>%
filter (! (app.mthd == "bc" & incorp == "none")) %>%
summarise (mean_rf = mean (efficacy_random_forest),
mean_alfam2 = mean (efficacy_alfam2),
mean_gbf = mean (efficacy_xgboost),
mean_lasso = mean (efficacy_lasso), .by = c ('app.mthd')) %>%
mutate_if (is.numeric, round, digits = 1) %>%
kable()
data_scenarios %>%
filter (! (app.mthd == "bc" & incorp == "none")) %>%
summarise (median_rf = median (efficacy_random_forest),
median_alfam2 = median (efficacy_alfam2),
median_gbf = median (efficacy_xgboost),
median_lasso = median (efficacy_lasso), .by = c ('app.mthd')) %>%
mutate_if (is.numeric, round, digits = 1) %>%
kable()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 12, fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 12, fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
tiff (file = "figures/Figure_5.tiff", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
tiff (file = "figures/Figure_4.tiff", width = 1300, height = 800)
grid.arrange (plot_importance_rf, plot_importance_xgboost, nrow = 1)
dev.off()
png (file = "figures/Figure_4.png", width = 1300, height = 800)
grid.arrange (plot_importance_rf, plot_importance_xgboost, nrow = 1)
dev.off()
Figure_7 = data_alfam2 %>%
ggplot () +
geom_point (aes (x = man.ph, y = tan.app, color = man.source), size = 5) +
scale_color_manual (values = Dark2) +
xlab ("pH") +
ylab ("TAN") +
theme (legend.position = "bottom") +
labs (color = "Manure source") +
NULL
Figure_7
Figure_7 = data_alfam2 %>%
mutate (man.source = recode (man.source, "cat" = "Cattle", "pig" = "Pig")) %>%
ggplot () +
geom_boxplot (aes (x = man.source, y = tan.app)) +
ylab ("TAN") +
xlab ("Manure source") +
theme (axis.text.x = element_text(margin = ggplot2::margin(t = 10))) +
NULL
Figure_7
tiff (file = "figures/Figure_7.tiff", width = 1200, height = 800)
Figure_7
dev.off()
png (file = "figures/Figure_7.png", width = 1200, height = 800)
Figure_7
dev.off()
data = read_excel("data/Peng_Xu_et_al_2024/Supplementary_Table_3_use2775.xlsx", sheet = 2)
head (data) %>% select (- Title) %>% kable()
Figure_9 = rbind (
data %>% select (temp = Tem) %>% mutate (data = "Data from Xu et al (2024)"),
data_alfam2 %>% select (temp = air.temp) %>% mutate (data = "Data used for the alfam2 model")
) %>%
ggplot () +
geom_histogram (aes (x = temp)) +
facet_wrap (~ data, ncol = 1, scales = "free") +
theme (strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))+
xlab ("Air temperature (Â°C)") +
ylab ("Number of observations")
Figure_9
tiff (file = "figures/Figure_9.tiff", width = 1000, height = 600)
Figure_9
dev.off()
png (file = "figures/Figure_9.png", width = 1000, height = 600)
Figure_9
dev.off()
rbind (
data %>% select (temp = Tem) %>% mutate (data = "Data from Xu et al (2024)"),
data_alfam2 %>% select (temp = air.temp) %>% mutate (data = "Data used for the alfam2 model")
) %>%
summarise (mean_temp = mean (temp), sd_temp = sd (temp), .by = data)
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 12, family = "Times", fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 12, family = "Times", fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 12, family = "Times", fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 12, family = "Times",
label.padding = unit(0.5, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 12, family = "Times", fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 12, family = "Times",
label.padding = unit(1, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 10, family = "Times", fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 12, family = "Times",
label.padding = unit(1, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 10, family = "Times", fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 10, family = "Times",
label.padding = unit(1, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 10, family = "Times", fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 11, family = "Times",
label.padding = unit(1, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 10, family = "Times", fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 37.5, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 38, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 38.5, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 35, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 38.5, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 37, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
legend = cowplot::get_legend (plot_shap_rf)
plot_shap_rf_2 = plot_shap_rf +
annotate (geom = "label", label = "Random forest", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 38.5, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank())
plot_shap_xgboost_2 = plot_shap_xgboost +
annotate (geom = "label", label = "Gradient boosting", size = 11, family = "Times",
label.padding = unit(0.8, "lines"), fontface = "bold", x = 36.8, y = 1.5, fill = "#000080", color = "white") +
xlim (c (- 18, 45)) +
theme (legend.position = "none",
plot.margin = unit (c (0, 0, 1, 0), "cm"),
axis.title.x = element_text (margin = ggplot2::margin (t = 10, b = 20)))
png (file = "figures/Figure_5.png", width = 1000, height = 900)
do.call ("grid.arrange",
c (list(plot_shap_rf_2,
plot_shap_xgboost_2,
legend),
list(layout_matrix = as.matrix(c (1, 2, 3)),
heights = c (0.8, 1, 0.2))))
dev.off()
png (file = "figures/Figure_10.png", width = 1000, height = 1100)
plot_residuals_complete_dataset
dev.off()
png (file = "figures/Figure_11.png", width = 1000, height = 1100)
plot_residuals_evaluation_subset
dev.off()
png (file = "figures/Figure_8.png", width = 1200, height = 800)
Figure_8
dev.off()
