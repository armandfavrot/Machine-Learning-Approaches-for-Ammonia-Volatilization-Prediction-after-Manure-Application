filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 30)))
png (file = "figures/plot_eval.png", width = 1400, height = 500)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 400)
plot_calib
dev.off()
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36)))
png (file = "figures/plot_eval.png", width = 1400, height = 500)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 400)
plot_calib
dev.off()
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36),
legend.spacing.x = unit(1,"cm")))
png (file = "figures/plot_eval.png", width = 1400, height = 500)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 400)
plot_calib
dev.off()
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36),
legend.spacing.x = unit(1,"cm"),
legend.key.width=unit(3,"cm")))
png (file = "figures/plot_eval.png", width = 1400, height = 500)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 400)
plot_calib
dev.off()
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36),
legend.spacing.x = unit(0.5,"cm"),
legend.key.width=unit(1,"cm")))
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36),
legend.spacing.x = unit(0.5,"cm"),
legend.key.width=unit(1,"cm")))
png (file = "figures/plot_eval.png", width = 1400, height = 500)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 400)
plot_calib
dev.off()
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36),
legend.spacing.x = unit(0.5,"cm"),
legend.key.width=unit(1,"cm"),
legend.text = element_text(margin = margin(r = 20, unit = "pt")))
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36),
legend.spacing.x = unit(0.5,"cm"),
legend.key.width=unit(1,"cm"),
legend.text = element_text(margin = margin(r = 20, unit = "pt"))))
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36),
legend.spacing.x = unit(0.5,"cm"),
legend.key.width=unit(1,"cm"),
legend.text = element_text(margin = ggplot2::margin(r = 20, unit = "pt"))))
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36, margin = ggplot2::margin(r = 20, unit = "pt")),
legend.spacing.x = unit(0.5,"cm"),
legend.key.width=unit(1,"cm")))
png (file = "figures/plot_eval.png", width = 1400, height = 500)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 400)
plot_calib
dev.off()
# Evaluation on calibration subset
df_plot = df_evaluation_metrics %>%
filter (response == "72h cum. emission") %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
select (- MSE, - RMSE) %>%
filter (dataset == "Calibration subset") %>%
pivot_longer (cols = c (Pearsons_r, ME, MAE, MBE)) %>%
mutate (name = factor (name, levels = c("Pearsons_r", "ME", "MAE", "MBE")))
plot_calib = suppressWarnings(ggplot (df_plot) +
geom_histogram (aes (x = name, y = value, fill = method), position = "dodge", stat = "identity") +
facet_wrap (~ name, scales = "free", nrow = 1) +
xlab ("") + ylab ("") + labs (fill = "") +
theme (legend.position = "bottom",
strip.text.y = element_text(angle = 0),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0))) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
ggtitle ("Calibration subset") +
theme (plot.title = element_text (margin= ggplot2::margin(0,0,20,0), hjust = 0, size = 30),
legend.text = element_text (size = 36, margin = ggplot2::margin(r = 20, unit = "pt")),
legend.key.width=unit(1,"cm")))
png (file = "figures/plot_eval.png", width = 1400, height = 500)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 400)
plot_calib
dev.off()
png (file = "figures/plot_eval.png", width = 1400, height = 470)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 450)
plot_calib
dev.off()
png (file = "figures/plot_eval.png", width = 1400, height = 430)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 450)
plot_calib
dev.off()
png (file = "figures/plot_eval.png", width = 1400, height = 420)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 450)
plot_calib
dev.off()
png (file = "figures/plot_eval.png", width = 1400, height = 420)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 460)
plot_calib
dev.off()
png (file = "figures/plot_eval.png", width = 1400, height = 420)
plot_eval
dev.off()
png (file = "figures/plot_calib.png", width = 1400, height = 470)
plot_calib
dev.off()
plot_residuals_evaluation_subset = predictions_of_all_methods %>%
filter (dataset == "Evaluation subset") %>%
mutate (residuals = truth_er - er) %>%
mutate (app.mthd = recode (app.mthd, "bc" = "Broadcast", "bsth" = "Trailing hose", "ts" = "Trailing shoe", "os" = "Open slot injection")) %>%
mutate (app.mthd = factor (app.mthd, levels = c ("Broadcast", "Trailing hose", "Trailing shoe", "Open slot injection"))) %>%
filter (app.mthd %in% c ("Broadcast", "Trailing shoe")) %>%
ggplot () +
geom_boxplot (aes (x = country, y = residuals, fill = method), varwidth = TRUE) +
geom_hline (yintercept = 0, linetype = 2) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
facet_wrap (~ app.mthd, ncol = 1) +
ylab ("Residual (frac. applied TAN)") +
labs (fill = "") +
theme (legend.position = "bottom",
axis.title.y = element_text (margin = ggplot2::margin (r = 30)),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))
plot_residuals_evaluation_subset
png (file = "figures/plot_residuals_complete_dataset_Aarhus.png", width = 1000, height = 1100)
plot_residuals_complete_dataset
dev.off()
plot_residuals_complete_dataset = predictions_of_all_methods %>%
mutate (residuals = truth_er - er) %>%
mutate (app.mthd = recode (app.mthd, "bc" = "Broadcast", "bsth" = "Trailing hose", "ts" = "Trailing shoe", "os" = "Open slot injection")) %>%
mutate (app.mthd = factor (app.mthd, levels = c ("Broadcast", "Trailing hose", "Trailing shoe", "Open slot injection"))) %>%
filter (app.mthd %in% c ("Broadcast", "Trailing shoe")) %>%
ggplot () +
geom_boxplot (aes (x = country, y = residuals, fill = method)) +
geom_hline (yintercept = 0, linetype = 2) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
facet_wrap (~ app.mthd, ncol = 1) +
ylab ("Residual (frac. applied TAN)") +
labs (fill = "") +
theme (legend.position = "bottom",
axis.title.y = element_text (margin = ggplot2::margin (r = 30)),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))
plot_residuals_complete_dataset
png (file = "figures/plot_residuals_complete_dataset_Aarhus.png", width = 1000, height = 1100)
plot_residuals_complete_dataset
dev.off()
plot_residuals_complete_dataset = predictions_of_all_methods %>%
mutate (residuals = truth_er - er) %>%
mutate (app.mthd = recode (app.mthd, "bc" = "Broadcast", "bsth" = "Trailing hose", "ts" = "Trailing shoe", "os" = "Open slot injection")) %>%
mutate (app.mthd = factor (app.mthd, levels = c ("Broadcast", "Trailing hose", "Trailing shoe", "Open slot injection"))) %>%
filter (app.mthd %in% c ("Broadcast", "Trailing shoe")) %>%
ggplot () +
geom_boxplot (aes (x = country, y = residuals, fill = method)) +
geom_hline (yintercept = 0, linetype = 2) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
facet_wrap (~ app.mthd, ncol = 1) +
ylab ("Residual (frac. applied TAN)") +
xlab ("Country") +
labs (fill = "") +
theme (legend.position = "bottom",
legend.key.height = unit (1, "cm"),
axis.title.y = element_text (margin = ggplot2::margin (r = 30)),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))
plot_residuals_complete_dataset
png (file = "figures/plot_residuals_complete_dataset_Aarhus.png", width = 1000, height = 1100)
plot_residuals_complete_dataset
dev.off()
plot_residuals_complete_dataset = predictions_of_all_methods %>%
mutate (residuals = truth_er - er) %>%
mutate (app.mthd = recode (app.mthd, "bc" = "Broadcast", "bsth" = "Trailing hose", "ts" = "Trailing shoe", "os" = "Open slot injection")) %>%
mutate (app.mthd = factor (app.mthd, levels = c ("Broadcast", "Trailing hose", "Trailing shoe", "Open slot injection"))) %>%
filter (app.mthd %in% c ("Broadcast", "Trailing shoe")) %>%
ggplot () +
geom_boxplot (aes (x = country, y = residuals, fill = method)) +
geom_hline (yintercept = 0, linetype = 2) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
facet_wrap (~ app.mthd, ncol = 1) +
ylab ("Residual (frac. applied TAN)") +
xlab ("Country") +
labs (fill = "") +
theme (legend.position = "right",
legend.key.height = unit (1, "cm"),
axis.title.y = element_text (margin = ggplot2::margin (r = 30)),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))
plot_residuals_complete_dataset
plot_residuals_complete_dataset = predictions_of_all_methods %>%
mutate (residuals = truth_er - er) %>%
mutate (app.mthd = recode (app.mthd, "bc" = "Broadcast", "bsth" = "Trailing hose", "ts" = "Trailing shoe", "os" = "Open slot injection")) %>%
mutate (app.mthd = factor (app.mthd, levels = c ("Broadcast", "Trailing hose", "Trailing shoe", "Open slot injection"))) %>%
filter (app.mthd %in% c ("Broadcast", "Trailing shoe")) %>%
ggplot () +
geom_boxplot (aes (x = country, y = residuals, fill = method)) +
geom_hline (yintercept = 0, linetype = 2) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
facet_wrap (~ app.mthd, ncol = 1) +
ylab ("Residual (frac. applied TAN)") +
xlab ("Country") +
labs (fill = "") +
theme (legend.position = "right",
legend.key.height = unit (2, "cm"),
axis.title.y = element_text (margin = ggplot2::margin (r = 30)),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))
plot_residuals_complete_dataset
png (file = "figures/plot_residuals_complete_dataset_Aarhus.png", width = 1200, height = 1000)
plot_residuals_complete_dataset
dev.off()
plot_residuals_complete_dataset = predictions_of_all_methods %>%
mutate (residuals = truth_er - er) %>%
mutate (app.mthd = recode (app.mthd, "bc" = "Broadcast", "bsth" = "Trailing hose", "ts" = "Trailing shoe", "os" = "Open slot injection")) %>%
mutate (app.mthd = factor (app.mthd, levels = c ("Broadcast", "Trailing hose", "Trailing shoe", "Open slot injection"))) %>%
filter (app.mthd %in% c ("Broadcast", "Trailing shoe")) %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
ggplot () +
geom_boxplot (aes (x = country, y = residuals, fill = method)) +
geom_hline (yintercept = 0, linetype = 2) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
facet_wrap (~ app.mthd, ncol = 1) +
ylab ("Residual (frac. applied TAN)") +
xlab ("Country") +
labs (fill = "") +
theme (legend.position = "right",
legend.key.height = unit (2, "cm"), legend.key.width = unit (2, "cm"),
axis.title.y = element_text (margin = ggplot2::margin (r = 30)),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))
plot_residuals_complete_dataset
png (file = "figures/plot_residuals_complete_dataset_Aarhus.png", width = 1200, height = 1000)
plot_residuals_complete_dataset
dev.off()
plot_residuals_complete_dataset = predictions_of_all_methods %>%
mutate (residuals = truth_er - er) %>%
mutate (app.mthd = recode (app.mthd, "bc" = "Broadcast", "bsth" = "Trailing hose", "ts" = "Trailing shoe", "os" = "Open slot injection")) %>%
mutate (app.mthd = factor (app.mthd, levels = c ("Broadcast", "Trailing hose", "Trailing shoe", "Open slot injection"))) %>%
filter (app.mthd %in% c ("Broadcast", "Trailing shoe")) %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
ggplot () +
geom_boxplot (aes (x = country, y = residuals, fill = method)) +
geom_hline (yintercept = 0, linetype = 2) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
facet_wrap (~ app.mthd, ncol = 1) +
ylab ("Residual (frac. applied TAN)") +
xlab ("Country") +
labs (fill = "") +
theme (legend.position = "right",
legend.text = element_text (size = 36),
legend.key.height = unit (2, "cm"), legend.key.width = unit (2, "cm"),
axis.title.y = element_text (margin = ggplot2::margin (r = 30)),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))
plot_residuals_complete_dataset
png (file = "figures/plot_residuals_complete_dataset_Aarhus.png", width = 1400, height = 1000)
plot_residuals_complete_dataset
dev.off()
png (file = "figures/plot_residuals_complete_dataset_Aarhus.png", width = 1200, height = 800)
plot_residuals_complete_dataset
dev.off()
plot_residuals_complete_dataset = predictions_of_all_methods %>%
mutate (residuals = truth_er - er) %>%
mutate (app.mthd = recode (app.mthd, "bc" = "Broadcast", "bsth" = "Trailing hose", "ts" = "Trailing shoe", "os" = "Open slot injection")) %>%
mutate (app.mthd = factor (app.mthd, levels = c ("Broadcast", "Trailing hose", "Trailing shoe", "Open slot injection"))) %>%
filter (app.mthd %in% c ("Broadcast", "Trailing shoe")) %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
ggplot () +
geom_boxplot (aes (x = country, y = residuals, fill = method)) +
geom_hline (yintercept = 0, linetype = 2) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
facet_wrap (~ app.mthd, ncol = 1) +
ylab ("Residual (frac. applied TAN)") +
xlab ("Country") +
labs (fill = "") +
theme (legend.position = "right",
legend.text = element_text (size = 30),
legend.key.height = unit (2, "cm"), legend.key.width = unit (2, "cm"),
axis.title.y = element_text (margin = ggplot2::margin (r = 30)),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))
plot_residuals_complete_dataset
png (file = "figures/plot_residuals_complete_dataset_Aarhus.png", width = 1400, height = 800)
plot_residuals_complete_dataset
dev.off()
plot_residuals_complete_dataset = predictions_of_all_methods %>%
mutate (residuals = truth_er - er) %>%
mutate (app.mthd = recode (app.mthd, "bc" = "Broadcast", "bsth" = "Trailing hose", "ts" = "Trailing shoe", "os" = "Open slot injection")) %>%
mutate (app.mthd = factor (app.mthd, levels = c ("Broadcast", "Trailing hose", "Trailing shoe", "Open slot injection"))) %>%
filter (app.mthd %in% c ("Broadcast", "Trailing shoe")) %>%
mutate (method = recode (method, "alfam2" = "ALFAM2")) %>%
ggplot () +
geom_boxplot (aes (x = country, y = residuals, fill = method)) +
geom_hline (yintercept = 0, linetype = 2) +
scale_fill_manual (values = Dark2[c(2, 5, 6, 8)]) +
facet_wrap (~ app.mthd, ncol = 1) +
ylab ("Residual (frac. applied TAN)") +
xlab ("Country") +
labs (fill = "") +
theme (legend.position = "bottom",
legend.text = element_text (size = 30),
legend.key.height = unit (2, "cm"), legend.key.width = unit (2, "cm"),
axis.title.y = element_text (margin = ggplot2::margin (r = 30)),
strip.text.x = element_text(margin = ggplot2::margin(t = 8, b = 8, r = 0, l = 0)))
plot_residuals_complete_dataset
png (file = "figures/plot_residuals_complete_dataset_Aarhus.png", width = 1400, height = 800)
plot_residuals_complete_dataset
dev.off()
png (file = "figures/Residuals_complete_dataset.png", width = 1300, height = 900)
plot_residuals_complete_dataset
dev.off()
